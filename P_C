using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Diagnostics;

namespace WindowsFormsApplication2
{
    public partial class Form1 : Form
    {
        DataTable dtStoparica = new DataTable();
        Dictionary<int, Stopwatch> swDictionary = new Dictionary<int, Stopwatch>();
        int nextID = 1;
        int število_miz = 70;

        public Form1()
        {
            InitializeComponent();

            dtStoparica.Columns.Add("Čas", typeof(string));
            dtStoparica.Columns.Add("Miza", typeof(int));

            dataGridView1.DataSource = dtStoparica;

            DataGridViewColumn column_1_width = dataGridView1.Columns[0];
            column_1_width.Width = 50;
            DataGridViewColumn column_2_width = dataGridView1.Columns[1];
            column_2_width.Width = 35;

            foreach (string buttonName in new string[] { "Start", "Stop"})
            {
                DataGridViewButtonColumn colTemp = new DataGridViewButtonColumn();
                colTemp.Name = buttonName + "Col";
                colTemp.HeaderText = buttonName;
                colTemp.Width = 50;
                dataGridView1.Columns.Add(colTemp);
            }
            
            for (nextID = 1; nextID <= število_miz; nextID++)
            {
                dtStoparica.Rows.Add("00:00:00", nextID);
                swDictionary.Add(nextID, new Stopwatch());
            }

            zaženi_časovnik();

            dataGridView1.AllowUserToResizeRows = false;
            dataGridView1.AllowUserToResizeColumns = false;

            foreach (DataGridViewColumn dgvc in dataGridView1.Columns)
            {
                dgvc.SortMode = DataGridViewColumnSortMode.Programmatic;
            }
        }

        public void zaženi_časovnik()
        {
            timer1.Tick += (timer1_Tick);
            timer1.Interval = 1000;
            timer1.Start();
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            timer1.Stop();
            foreach(DataRow dRow in dtStoparica.Rows)
            {
                string elapsedString = swDictionary[(int)dRow["Miza"]].Elapsed.ToString(@"hh\:mm\:ss");
                dRow["Čas"] = elapsedString;
            }

            dataGridView1.Sort(dataGridView1.Columns["Čas"], ListSortDirection.Descending);

            for (int i = 0; i < število_miz; i++)
            {
                string začasna_spremenljivka_štoparice = dataGridView1["Čas", i].Value.ToString();

                if (int.Parse(začasna_spremenljivka_štoparice.Substring(3, 2)) == 0 && int.Parse(začasna_spremenljivka_štoparice.Substring(6, 2)) == 0)
                {
                    dataGridView1.Rows[i].Cells[2].Style.BackColor = Color.White;
                    dataGridView1.Rows[i].Cells[3].Style.BackColor = Color.White;
                }
                if (int.Parse(začasna_spremenljivka_štoparice.Substring(3, 2)) >= 0 && int.Parse(začasna_spremenljivka_štoparice.Substring(6, 2)) > 0)
                {
                    dataGridView1.Rows[i].Cells[2].Style.BackColor = Color.LightGreen;
                    dataGridView1.Rows[i].Cells[3].Style.BackColor = Color.LightGreen;
                }
                if (int.Parse(začasna_spremenljivka_štoparice.Substring(3, 2)) >= 40)
                {
                    dataGridView1.Rows[i].Cells[2].Style.BackColor = Color.Yellow;
                    dataGridView1.Rows[i].Cells[3].Style.BackColor = Color.Yellow;
                }
                if (int.Parse(začasna_spremenljivka_štoparice.Substring(3, 2)) >= 45)
                {
                    dataGridView1.Rows[i].Cells[2].Style.BackColor = Color.Red;
                    dataGridView1.Rows[i].Cells[3].Style.BackColor = Color.Red;
                }
            }
            timer1.Start();
        }

        private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex == -1 || e.RowIndex >= (nextID - 1))
                return;

            if (e.RowIndex > -1)
            {
                Stopwatch swTemp = swDictionary[(int)dataGridView1.Rows[e.RowIndex].Cells["Miza"].Value];

                if (e.ColumnIndex == -1)
                    return;

                switch (dataGridView1.Columns[e.ColumnIndex].HeaderText)
                {
                    case "Stop":
                        swTemp.Reset();
                        break;
                    case "Start":
                        swTemp.Restart();
                        break;
                    default:
                        break;
                }
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            dtStoparica.Rows.Add("00:00:00", nextID);
            swDictionary.Add(nextID, new Stopwatch());
            nextID++;
            število_miz++;
        }

        private void izračun_dilerji()
        {
            int mize = 0;

            if (textBox2.Text.Equals(""))
            {
                return;
            }
            else
            {
                if (radioButton1.Checked == true)
                {
                    mize = Int16.Parse(textBox2.Text.ToString());
                    mize += (mize / 2) + (mize % 2 > 0 ? 1 : 0);
                    label1.Text = "Potrebni dilerji: " + mize.ToString();
                }
                if (radioButton2.Checked == true)
                {
                    mize = Int16.Parse(textBox2.Text.ToString());
                    mize += (mize / 3) + (mize % 3 > 0 ? 1 : 0);
                    label1.Text = "Potrebni dilerji: " + mize.ToString();
                }
            }
        }

        private void izračun_mize()
        {
            double dilerji = 0;

            if (textBox1.Text.Equals(""))
            {
                return;
            }
            else
            {
                if (radioButton1.Checked == true)
                {
                    dilerji = Int16.Parse(textBox1.Text.ToString());
                    dilerji -= dilerji / 3;
                    int miz = (int)dilerji;
                    label2.Text = "Pokrite mize: " + miz.ToString();
                }
                if (radioButton2.Checked == true)
                {
                    dilerji = Int16.Parse(textBox1.Text.ToString());
                    dilerji -= dilerji / 4;
                    int miz = (int)dilerji;
                    label2.Text = "Pokrite mize: " + miz.ToString();
                }
            }
        }

        private void textBox2_TextChanged(object sender, EventArgs e)
        {
            izračun_dilerji();
        }

        private void radioButton1_CheckedChanged(object sender, EventArgs e)
        {
            izračun_dilerji();
            izračun_mize();
        }

        private void radioButton2_CheckedChanged(object sender, EventArgs e)
        {
            izračun_dilerji();
            izračun_mize();
        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            izračun_mize();
        }
    }
}
